const { Menu } = require('@grammyjs/menu')

const {
    locationKeyboard,
    genderKeyboard,
} = require('../keyboards/user-keyboard')

const main = new Menu('root-profile-menu').submenu(
    (ctx) => ctx.t('menu.main-profile-settings'),
    'settings-profile-submenu'
)

const settingsSubmenu = new Menu('settings-profile-submenu')
    .text('üòå –ò–º—è', async (ctx) => {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ —Å–≤–æ—ë –∏–º—è')

        return await ctx.conversation.enter('nameConversation')
    })
    .row()
    .text('üëµ –í–æ–∑—Ä–∞—Å—ÇÔ∏è', async (ctx) => {
        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –≤–æ–∑—Ä–∞—Å—Ç')

        return await ctx.conversation.enter('oldConversation')
    })
    .row()
    .text('–ü–æ–ª', async (ctx) => {
        const keyboard = genderKeyboard(ctx)

        await ctx.reply('–ü–æ–∂–∞–ª—É–π—Å—Ç–∞ –≤–≤–µ–¥–∏—Ç–µ –≤–∞—à –ø–æ–ª', {
            reply_markup: keyboard,
        })

        return await ctx.conversation.enter('genderConversation')
    })
    .row()
    .submenu('üèòÔ∏è –≥–æ—Ä–æ–¥', 'settings-profile-cities-submenu')
    .row()
    .back('<< –ù–∞–∑–∞–¥')

const citiesSubmenu = new Menu('settings-profile-cities-submenu')
    .text(
        (ctx) => ctx.t('menu.submenu-profile-settings-cities-location'),
        async (ctx) => {
            return await ctx.reply(
                ctx.t('menu.submenu-profile-settings-cities-confirm'),
                {
                    reply_markup: locationKeyboard,
                }
            )
        }
    )
    .row()
    .back('<< –ù–∞–∑–∞–¥', async (ctx) => {
        return ctx.menu.nav('settings-profile-submenu')
    })

main.register([settingsSubmenu, citiesSubmenu])

module.exports = {
    profileMenu: main,
}
